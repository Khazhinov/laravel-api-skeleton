version: '3.9'

networks:
  laravel-api-skeleton-network:
    name: laravel-api-skeleton-network
    driver: bridge
  laravel-api-skeleton-databases-network:
    name: laravel-api-skeleton-databases-network
    driver: bridge

volumes:
  laravel-api-skeleton-redis-volume:
  laravel-api-skeleton-postgres-database-volume:
  laravel-api-skeleton-postgres-home-volume:

x-common-variables: &common-variables
  APP_NAME: "Laravel Api Skeleton"
  APP_ENV: "local"
  APP_KEY: "base64:flDIzh18CdejPFzeyCO6k4FrtmB5XPKJl5Sz6/chLVk="
  APP_DEBUG: "true"
  APP_URL: "http://localhost:8000"
  LOG_CHANNEL: "stack"
  LOG_DEPRECATIONS_CHANNEL: "null"
  LOG_LEVEL: "debug"
  DB_CONNECTION: "pgsql"
  DB_HOST: "postgres"
  DB_PORT: "5432"
  DB_DATABASE: "laravel-api-skeleton"
  DB_USERNAME: "laravel-api-skeleton"
  DB_PASSWORD: "laravel-api-skeleton"
  BROADCAST_DRIVER: "redis"
  CACHE_DRIVER: "file"
  FILESYSTEM_DISK: "local"
  QUEUE_CONNECTION: "redis"
  SESSION_DRIVER: "redis"
  SESSION_LIFETIME: "120"
  REDIS_CLIENT: "phpredis"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: "null"
  MAIL_MAILER: "smtp"
  MAIL_HOST: "mailhog"
  MAIL_PORT: "1025"
  MAIL_USERNAME: "null"
  MAIL_PASSWORD: "null"
  MAIL_ENCRYPTION: "null"
  MAIL_FROM_ADDRESS: "hello@example.com"
  MAIL_FROM_NAME: "${APP_NAME}"
  TELESCOPE_ENABLED: "true"

services:
  api:
    build:
      context: .
      dockerfile: docker/image/Dockerfile
    container_name: laravel-api-skeleton-api
    restart: always
    command: ["/app/docker/entrypoint/api.sh"]
    ports: ["8000:80"]
    environment:
      <<: *common-variables
      PHP_POOL_NAME: "laravel-api-skeleton-api"
    networks:
      - laravel-api-skeleton-network
      - laravel-api-skeleton-databases-network
    depends_on:
      - redis
      - postgres

  task:
    build:
      context: .
      dockerfile: docker/image/Dockerfile
    container_name: laravel-api-skeleton-task
    restart: always
    command: ["/app/docker/entrypoint/task.sh"]
    environment:
      <<: *common-variables
      PHP_POOL_NAME: "laravel-api-skeleton-task"
    networks:
      - laravel-api-skeleton-network
      - laravel-api-skeleton-databases-network
    depends_on:
      - redis
      - postgres

  queue:
    build:
      context: .
      dockerfile: docker/image/Dockerfile
    container_name: laravel-api-skeleton-queue
    restart: always
    command: ["/app/docker/entrypoint/queue.sh"]
    environment:
      <<: *common-variables
      PHP_POOL_NAME: "laravel-api-skeleton-queue"
    networks:
      - laravel-api-skeleton-network
      - laravel-api-skeleton-databases-network
    depends_on:
      - redis
      - postgres

  redis:
    image: redislabs/rejson:2.4.3
    container_name: laravel-api-skeleton-redis
    restart: always
    ports: ["6379:6379"]
    volumes:
      - laravel-api-skeleton-redis-volume:/data
    networks:
      - laravel-api-skeleton-databases-network

  postgres:
    image: postgres:15.2
    container_name: laravel-api-skeleton-postgres
    restart: always
    ports: ["5432:5432"]
    environment:
      POSTGRES_DB: laravel-api-skeleton
      POSTGRES_USER: laravel-api-skeleton
      POSTGRES_PASSWORD: laravel-api-skeleton
    volumes:
      - laravel-api-skeleton-postgres-database-volume:/var/lib/postgresql/data
      - laravel-api-skeleton-postgres-home-volume:/root
    networks:
      - laravel-api-skeleton-databases-network
